/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package mbtilesconverter;

import java.awt.Desktop;
import java.awt.EventQueue;
import java.awt.FileDialog;
import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author shannah
 */
public class AppFrame extends javax.swing.JFrame {
    File inputFile, outputFile;
    /**
     * Creates new form AppFrame
     */
    public AppFrame() {
        initComponents();
        inputFileField.setEditable(false);
        revealButton.setVisible(false);
        outputLabel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        inputFileField = new javax.swing.JTextField();
        selectInputFileBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputLog = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        outputLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        revealButton = new javax.swing.JButton();
        convertNow = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Input File");

        inputFileField.setText("Click \"Select...\" to begin");

        selectInputFileBtn.setText("Select...");
        selectInputFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectInputFileBtnActionPerformed(evt);
            }
        });

        outputLog.setColumns(20);
        outputLog.setRows(5);
        jScrollPane1.setViewportView(outputLog);

        jLabel2.setText("Output Log");

        outputLabel.setText("Output File:");

        revealButton.setText("Reveal in Finder");
        revealButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revealButtonActionPerformed(evt);
            }
        });

        convertNow.setText("Convert Now");
        convertNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertNowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(inputFileField, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectInputFileBtn))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(convertNow)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(outputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(86, 86, 86)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(revealButton))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(inputFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectInputFileBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(convertNow)
                .addGap(3, 3, 3)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(outputLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addContainerGap(43, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(revealButton)
                        .addGap(34, 34, 34))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectInputFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectInputFileBtnActionPerformed
        // TODO add your handling code here:
        EventQueue.invokeLater(new Runnable(){

            @Override
            public void run() {
                FileDialog fd = new FileDialog(AppFrame.this, "Select mbtiles File to convert...",  FileDialog.LOAD);
                fd.setModal(true);
                fd.setVisible(true);
                if ( fd.getFile() != null ){
                    inputFile = new File(fd.getDirectory(), fd.getFile());
                    inputFileField.setText(inputFile.getAbsolutePath());
                }
            }
            
        });
    }//GEN-LAST:event_selectInputFileBtnActionPerformed

    private void revealButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revealButtonActionPerformed
        try {
            // TODO add your handling code here:
            Desktop.getDesktop().open(outputFile.getParentFile());
        } catch (IOException ex) {
            Logger.getLogger(AppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_revealButtonActionPerformed

    private void convertNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertNowActionPerformed
        // TODO add your handling code here:
        if ( inputFile == null || !inputFile.exists() ){
            outputLog.setText("Error:  No input file selected, or the file does not exist");
            return;
        }
        
        outputLabel.setVisible(false);
        revealButton.setVisible(true);
        
        Thread t = new Thread(new Runnable(){

            @Override
            public void run() {
                final MBTilesConverter converter = new MBTilesConverter(inputFile.getAbsolutePath()){

                    @Override
                    protected void log(final String str) {
                        EventQueue.invokeLater(new Runnable(){

                            @Override
                            public void run() {
                                outputLog.append("\n"+str);
                            }
                            
                        });
                    }
                    
                };
                try {
                    converter.convert();
                    EventQueue.invokeLater(new Runnable(){

                        @Override
                        public void run() {
                            if ( converter.destinationFile != null ){
                                outputFile = converter.destinationFile;
                                outputLabel.setText(outputFile.getName());
                                outputLabel.setVisible(true);
                                revealButton.setVisible(true);
                                outputLog.append("\nOutput saved in "+outputFile.getAbsolutePath());
                            }
                        }
                        
                    });
                    
                    
                } catch (IOException ex) {
                    Logger.getLogger(AppFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(AppFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        });
        t.start();
    }//GEN-LAST:event_convertNowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convertNow;
    private javax.swing.JTextField inputFileField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JTextArea outputLog;
    private javax.swing.JButton revealButton;
    private javax.swing.JButton selectInputFileBtn;
    // End of variables declaration//GEN-END:variables
}
